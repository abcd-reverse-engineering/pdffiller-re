<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sort="clr-namespace:pdfFiller.UI.ContextMenus.SortMenu"
                    xmlns:actions="clr-namespace:pdfFiller.UI.ContextMenus.ActionsMenu"
                    xmlns:addDocument="clr-namespace:pdfFiller.UI.ContextMenus.AddDocumentMenu"
                    xmlns:settings="clr-namespace:pdfFiller.UI.ContextMenus.Settings"
                    xmlns:prop="clr-namespace:pdfFiller.AttachedProperties"
                    xmlns:templates="clr-namespace:pdfFiller.TemplateSelectors"
                    xmlns:converters="clr-namespace:pdfFiller.Converters"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Border x:Name="Border" Background="White" Padding="8" Margin="8" BorderBrush="Transparent"
                  CornerRadius="3">
            <UIElement.Effect>
              <DropShadowEffect BlurRadius="15" ShadowDepth="1" Color="#E8ECF1"/>
            </UIElement.Effect>
            <StackPanel Orientation="Vertical" IsItemsHost="true"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ContextMenuGridStyle" TargetType="{x:Type ContextMenu}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Border x:Name="Border" Background="White" Padding="8" Margin="8" BorderBrush="Transparent"
                  CornerRadius="3">
            <UIElement.Effect>
              <DropShadowEffect BlurRadius="15" ShadowDepth="1" Color="#E8ECF1"/>
            </UIElement.Effect>
            <UniformGrid Columns="2" IsItemsHost="true"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SortMenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="MenuItem.IsCheckable" Value="true"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="prop:ContextMenuAttachedProperties.ItemClickCommand"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=DataContext.SortItemClickCommand}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <FrameworkTemplate.Resources>
            <converters:BooleanVisibilityConverter x:Key="booleanVisibilityConverter"/>
          </FrameworkTemplate.Resources>
          <Border Name="Border" Padding="16 6" Margin="0 4">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
              </Grid.ColumnDefinitions>
              <TextBlock Foreground="#444" FontSize="10" MinWidth="130" HorizontalAlignment="Left"
                         FontFamily="{DynamicResource Medium}" Text="{Binding Name}"/>
              <Image Grid.Column="1" Width="10" Margin="16 0 0 0" HorizontalAlignment="Right" VerticalAlignment="Center"
                     Source="/pdfFiller;component/Resources/Images/selection_tick.png"
                     Visibility="{Binding IsSelected, Converter={StaticResource booleanVisibilityConverter}}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ContextMenuHeader" TargetType="{x:Type MenuItem}">
    <Setter Property="HeaderedItemsControl.Header" Value="{Binding Name}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border Padding="8 4">
            <ContentPresenter TextBlock.FontSize="12" HorizontalAlignment="Left" ContentSource="Header"
                              TextBlock.Foreground="#222" TextBlock.FontFamily="{DynamicResource Bold}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ContextMenuSeparatorStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border Background="#D8D8D8" Margin="12 8" Height="1" BorderBrush="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <templates:SortMenuStyleItemSelector x:Key="SortMenuTemplateSelector" ItemStyle="{StaticResource SortMenuItem}"
                                       HeaderStyle="{StaticResource ContextMenuHeader}"/>
  <ContextMenu x:Key="SortMenu" ItemContainerStyleSelector="{StaticResource SortMenuTemplateSelector}"
               Style="{StaticResource ContextMenuStyle}" IsOpen="{Binding IsMenuOpened, Mode=OneWayToSource}"
               ItemsSource="{Binding SortMenuItems}">
    <FrameworkElement.DataContext>
      <sort:SortMenuViewModel/>
    </FrameworkElement.DataContext>
  </ContextMenu>
  <Style x:Key="ActionsMenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="MenuItem.IsCheckable" Value="true"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="prop:ContextMenuAttachedProperties.ItemClickOwnerCommand"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=DataContext.ActionItemClickCommand}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border Name="Border" Padding="16 6">
            <StackPanel Orientation="Horizontal">
              <Image Grid.Column="0" Width="13" Margin="0 0 8 0" HorizontalAlignment="Left" VerticalAlignment="Center"
                     Source="{Binding ImageSource}"/>
              <TextBlock Foreground="#444" FontSize="10" Grid.Column="1" MinWidth="80" HorizontalAlignment="Left"
                         VerticalAlignment="Center" FontFamily="{DynamicResource Medium}" Text="{Binding Name}"/>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <templates:ActionsMenuStyleItemSelector x:Key="ActionsMenuTemplateSelector" ItemStyle="{StaticResource ActionsMenuItem}"
                                          SeparatorStyle="{StaticResource ContextMenuSeparatorStyle}"/>
  <ContextMenu x:Key="ActionsMenuStyle" ItemContainerStyleSelector="{StaticResource ActionsMenuTemplateSelector}"
               Style="{StaticResource ContextMenuStyle}" ItemsSource="{Binding Items}">
    <FrameworkElement.DataContext>
      <actions:ActionsMenuViewModel/>
    </FrameworkElement.DataContext>
  </ContextMenu>
  <Style x:Key="AddDocumentMenuStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="MenuItem.Command" Value="{Binding ClickCommand}"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="Border" Padding="8" Margin="8 4" BorderThickness="1.5" CornerRadius="5"
                  BorderBrush="Transparent" Background="White">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
              </Grid.RowDefinitions>
              <Image Grid.Row="0" Width="18" Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"
                     Source="{Binding ImageSource}"/>
              <TextBlock Foreground="#444" FontSize="12" Grid.Row="1" MaxWidth="100" TextWrapping="Wrap"
                         TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"
                         FontFamily="{DynamicResource Medium}" Text="{Binding Name}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Border.BorderBrush" Value="#ff9900"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ContextMenu x:Key="AddDocumentMenu" ItemContainerStyle="{StaticResource AddDocumentMenuStyle}"
               Style="{StaticResource ContextMenuGridStyle}" ItemsSource="{Binding Types}">
    <FrameworkElement.DataContext>
      <addDocument:AddDocumentMenuViewModel/>
    </FrameworkElement.DataContext>
  </ContextMenu>
  <Style x:Key="SettingsMenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <FrameworkTemplate.Resources>
            <converters:BooleanVisibilityConverter x:Key="booleanVisibilityConverter"/>
          </FrameworkTemplate.Resources>
          <Border Name="Border" Padding="12 8" Margin="0 4">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Image Grid.Column="0" Width="16" Margin="0 0 12 0" HorizontalAlignment="Left" VerticalAlignment="Center"
                     Source="{Binding Image}"/>
              <TextBlock Grid.Column="1" Foreground="#444" FontSize="13" MinWidth="80" VerticalAlignment="Center"
                         HorizontalAlignment="Left" FontFamily="{DynamicResource Medium}" Text="{Binding Name}"/>
              <ToggleButton Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="8 0 0 0"
                            Background="Blue" Style="{DynamicResource MaterialDesignSwitchToggleButton}"
                            IsChecked="{Binding IsEnabled, Mode=OneWay}" Command="{Binding ToggleCommand}"
                            CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ContextMenu x:Key="SettingsMenu" ItemContainerStyle="{StaticResource SettingsMenuItem}"
               Style="{StaticResource ContextMenuStyle}" ItemsSource="{Binding SettingsItems}">
    <FrameworkElement.DataContext>
      <settings:SettingsMenuViewModel/>
    </FrameworkElement.DataContext>
  </ContextMenu>
</ResourceDictionary>
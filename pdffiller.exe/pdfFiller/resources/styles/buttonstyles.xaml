<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:prop="clr-namespace:pdfFiller.AttachedProperties"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="OrangeButton" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Background" Value="#ff9900"/>
    <Setter Property="Control.Padding" Value="20 8"/>
    <Setter Property="Control.Foreground" Value="#fff"/>
    <Setter Property="Control.FontWeight" Value="DemiBold"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" Focusable="false" CornerRadius="3" BorderThickness="0"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <TextBlock Text="{TemplateBinding ContentControl.Content}" Focusable="false"
                       Padding="{TemplateBinding Control.Padding}" VerticalAlignment="Center" HorizontalAlignment="Center"
                       FontFamily="{TemplateBinding Control.FontFamily}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="AuthButton" TargetType="{x:Type Button}">
    <Setter Property="Control.Background" Value="#fff"/>
    <Setter Property="Control.Padding" Value="20 8"/>
    <Setter Property="Control.FontWeight" Value="DemiBold"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" Focusable="false" CornerRadius="3" BorderThickness="1"
                  BorderBrush="{TemplateBinding Control.Foreground}" SnapsToDevicePixels="true">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
              <TextBlock Text="{TemplateBinding ContentControl.Content}" Focusable="false"
                         Padding="{TemplateBinding Control.Padding}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="OKButton" TargetType="{x:Type Button}">
    <Setter Property="ContentControl.Content" Value="Ok"/>
    <Setter Property="Control.FontSize" Value="14"/>
    <Setter Property="Control.Foreground" Value="#ff9900"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border BorderBrush="#eeeeee" BorderThickness="0 1 0 0" SnapsToDevicePixels="true">
            <TextBlock Text="{TemplateBinding ContentControl.Content}" Width="200" TextAlignment="Center" Padding="0 8"
                       VerticalAlignment="Center" FontSize="{TemplateBinding Control.FontSize}"
                       FontFamily="{DynamicResource Medium}" HorizontalAlignment="Center"
                       Foreground="{TemplateBinding Control.Foreground}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ButtonWithIcon" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" Padding="4" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  CornerRadius="{Binding Path=(prop:ButtonAttachedProperties.ButtonCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
              </Grid.RowDefinitions>
              <Image Width="16" Height="16" Grid.Row="0"
                     Source="{Binding Path=(prop:ButtonAttachedProperties.ButtonIcon), RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter Grid.Row="1"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Border.Background" Value="#eee"/>
              <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ButtonWithIconLeft" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="prop:ButtonAttachedProperties.ButtonIconHeight" Value="16"/>
    <Setter Property="prop:ButtonAttachedProperties.ButtonIconWidth" Value="16"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" Padding="4" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  CornerRadius="{Binding Path=(prop:ButtonAttachedProperties.ButtonCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
              </Grid.ColumnDefinitions>
              <Image Margin="8 0" Grid.Column="0"
                     Width="{Binding Path=(prop:ButtonAttachedProperties.ButtonIconWidth), RelativeSource={RelativeSource TemplatedParent}}"
                     Height="{Binding Path=(prop:ButtonAttachedProperties.ButtonIconHeight), RelativeSource={RelativeSource TemplatedParent}}"
                     Source="{Binding Path=(prop:ButtonAttachedProperties.ButtonIcon), RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter VerticalAlignment="Center" Grid.Column="1"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Border.Background" Value="#eee"/>
              <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SideMenuButton" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" Padding="8 8" Background="Transparent" BorderBrush="Transparent"
                  BorderThickness="0">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Image Width="16" Height="16" Grid.Column="0"
                     Source="{Binding Path=(prop:ButtonAttachedProperties.ButtonIcon), RelativeSource={RelativeSource TemplatedParent}}"/>
              <TextBlock Style="{StaticResource SideMenuTextStyle}" Margin="8 0 0 0" Foreground="White"
                         VerticalAlignment="Center" FontFamily="{DynamicResource Medium}" Grid.Column="1"
                         Text="{TemplateBinding ContentControl.Content}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Border.Background" Value="#232323"/>
              <Setter TargetName="Border" Property="Border.CornerRadius" Value="3"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RotationAnimation" TargetType="{x:Type Image}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding IsCollapsed}" Value="True">
        <TriggerBase.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)" From="0" To="180"
                               Duration="0:0:0.3"/>
            </Storyboard>
          </BeginStoryboard>
        </TriggerBase.EnterActions>
        <TriggerBase.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(RotateTransform.Angle)" From="180" To="0"
                               Duration="0:0:0.3"/>
            </Storyboard>
          </BeginStoryboard>
        </TriggerBase.ExitActions>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="SideMenuOpenCloseButton" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" Padding="0 8" Background="#232323" CornerRadius="3" BorderBrush="Transparent"
                  BorderThickness="0">
            <Grid>
              <Image x:Name="OpenCloseImage" Width="16" Height="16" Grid.Column="0" RenderTransformOrigin=".5,.5"
                     Style="{StaticResource RotationAnimation}"
                     Source="{Binding Path=(prop:ButtonAttachedProperties.ButtonIcon), RelativeSource={RelativeSource TemplatedParent}}">
                <UIElement.RenderTransform>
                  <RotateTransform/>
                </UIElement.RenderTransform>
              </Image>
              <ContentPresenter/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ImageButton" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  CornerRadius="{Binding Path=(prop:ButtonAttachedProperties.ButtonCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
            <Image VerticalAlignment="Center" HorizontalAlignment="Center"
                   Source="{Binding Path=(prop:ButtonAttachedProperties.ButtonIcon), RelativeSource={RelativeSource TemplatedParent}}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BottomMenuButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.FontSize" Value="10"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource Medium}"/>
    <Setter Property="Control.Foreground" Value="#444"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" Padding="8 4 8 0" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  CornerRadius="{Binding Path=(prop:ButtonAttachedProperties.ButtonCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
              </Grid.RowDefinitions>
              <Image x:Name="Image" Width="12" Height="12" Grid.Row="0"
                     Source="{Binding Path=(prop:ButtonAttachedProperties.ButtonIcon), RelativeSource={RelativeSource TemplatedParent}}"/>
              <Label x:Name="Label" Content="{TemplateBinding ContentControl.Content}" Grid.Row="1" Margin="0 0 2 0"
                     Foreground="{TemplateBinding Control.Foreground}" FontSize="{TemplateBinding Control.FontSize}"
                     FontFamily="{TemplateBinding Control.FontFamily}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Border.Background" Value="#eee"/>
              <Setter TargetName="Border" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Border.Background" Value="#fff"/>
              <Setter TargetName="Label" Property="Control.Foreground" Value="#222"/>
              <Setter TargetName="Image" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>